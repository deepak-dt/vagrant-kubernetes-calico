Steps to install docker:
-----------------------------
sudo apt-get install \
    linux-image-extra-$(uname -r) \
    linux-image-extra-virtual

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update

sudo apt-get install docker-ce


Other
---------------------
sudo su
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
echo deb http://apt.kubernetes.io/ kubernetes-xenial main >> /etc/apt/sources.list.d/kubernetes.list
apt-get update -y
apt-get install -y kubelet kubeadm kubectl kubernetes-cni

wget https://docs.projectcalico.org/master/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml

curl -L --silent https://github.com/projectcalico/calico-containers/releases/download/v1.0.0/calicoctl -o /usr/local/bin/calicoctl
chmod +x /usr/local/bin/calicoctl

edit calico.yaml





calico-9:	kubeadm join --token 2dd4bb.2e5f64154f1aea00 192.168.100.9:6443

calico-18:	kubeadm join --token 3d5c26.274e5a164d552561 192.168.100.18:6443


Kubernets commands
---------------------------------------
sudo ip addr add fd80:24e2:f998:72d7::1/112 dev enp2s0

kubeadm init --apiserver-advertise-address=192.168.100.9 --service-cidr=10.96.0.0/24

To start using your cluster, you need to run (as a regular user):

sudo cp /etc/kubernetes/admin.conf $HOME/
sudo chown $(id -u):$(id -g) $HOME/admin.conf
export KUBECONFIG=$HOME/admin.conf

kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl get nodes
sudo kubeadm version
kubectl get pods --all-namespaces=true

kubectl apply -f https://docs.projectcalico.org/master/getting-started/kubernetes/installation/hosted/calicoctl.yaml
kubectl exec -it calicoctl sh --namespace=kube-system
kubectl  delete  -f  https://docs.projectcalico.org/master/getting-started/kubernetes/installation/hosted/calicoctl.yaml
ETCD_ENDPOINTS=http://127.0.0.1:2379 calicoctl get pools

sudo docker images |grep calico
sudo docker images |grep cni
sudo apt-get install bridge-utils



cat > nginx.yaml <<EOT
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx
        ports:
        - containerPort: 80
EOT
kubectl create -f nginx.yaml 
sudo docker images |grep nginx
kubectl describe pod my-nginx-4293833666-682tb
kubectl delete -f nginx.yaml 


kubectl create namespace sock-shop
kubectl apply -n sock-shop -f "https://github.com/microservices-demo/microservices-demo/blob/master/deploy/kubernetes/complete-demo.yaml?raw=true"
kubectl describe pod carts-db-1721187500-zjrwm --namespace=sock-shop
kubectl exec -it carts-2469883122-qmcbt sh --namespace sock-shop

kubectl get svc --all-namespaces
export ETCD_ENDPOINTS=http://10.96.0.9:6666
calicoctl get ippools

kubectl -n sock-shop get svc front-end

kubectl delete -f  "https://github.com/microservices-demo/microservices-demo/blob/master/deploy/kubernetes/complete-demo.yaml?raw=true"

kubeadm reset



















